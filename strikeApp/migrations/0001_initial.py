# Generated by Django 3.2.2 on 2021-05-10 18:47

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('source_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='URL Адрес')),
                ('source_content', models.TextField(blank=True, null=True, verbose_name='Информация')),
                ('city_name', models.CharField(max_length=100, verbose_name='Название города')),
                ('company', models.CharField(max_length=100, verbose_name='Название комании')),
                ('company_is_tnk_member', models.BooleanField(default=False, verbose_name='Является ли эта кампания частью ТНК (Транснациональная компания)')),
                ('company_tnk_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название ТНК (Транснациональная компания)')),
                ('date_strike_start', models.DateTimeField(default=datetime.datetime(2020, 1, 1, 8, 0, tzinfo=utc), verbose_name='Дата начало проведения забастовки/акции')),
                ('data_strike_end', models.DateTimeField(default=datetime.datetime(2020, 1, 1, 12, 0, tzinfo=utc), verbose_name='Дата конца проведения забастовки/акции')),
                ('has_trade_union', models.CharField(choices=[('+', 'Да'), ('-', 'Отсутствует'), ('?', 'Неизвестно'), ('ДР', 'Другое')], default='+', max_length=50, verbose_name='Профсоюз')),
                ('card_create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата начала')),
                ('card_end_date', models.DateTimeField(default=datetime.datetime(2999, 1, 1, 0, 0, tzinfo=utc), verbose_name='Дата завершения')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Дата последнего изменения')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('trade_union', models.CharField(default='', max_length=200, verbose_name='Название профсоюза')),
                ('phone_number_union', models.CharField(blank=True, max_length=200, null=True, verbose_name='Контакты')),
                ('address_union', models.CharField(blank=True, max_length=200, null=True, verbose_name='Адрес')),
                ('group', models.CharField(choices=[('Б/ПГ', 'Бригада или производственная группа'), ('опр категория', 'Определенная категория работников'), ('Др', 'Другое')], default='Б/ПГ', max_length=200, verbose_name='Группа лиц')),
                ('union_membership', models.CharField(choices=[('Все', 'Все состоят в профсоюзе'), ('Не все', 'В профсоюзе состоят не все'), ('Никто', 'Никто не состоит в профсоюзе')], default='Все', max_length=200, verbose_name='Членство в профсоюзе')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Фамилия')),
                ('gender', models.CharField(choices=[('М', 'Мужчина'), ('Ж', 'Женщина')], default='М', max_length=1, verbose_name='Пол')),
                ('age', models.CharField(choices=[('<18', 'менее 18 лет'), ('19-62', '19-62'), ('> 63', '63 и старше')], default='<18', max_length=10, verbose_name='Возраст')),
                ('profession', models.CharField(default='', max_length=100, verbose_name='Профессия')),
                ('employer', models.CharField(default='', max_length=200, verbose_name='Работодатель')),
                ('phone_number_employer', models.CharField(blank=True, max_length=200, null=True, verbose_name='Контакты')),
                ('address_employer', models.CharField(blank=True, max_length=200, null=True, verbose_name='Адрес')),
                ('duration', models.CharField(choices=[('-', 'Кратковременная'), ('---', 'Длящаяся')], default='-', max_length=3, verbose_name='Длительность забастовки/акции')),
                ('meeting_requirements', models.CharField(choices=[('+', 'удовлетворены'), ('-', 'не удовлетворены'), ('+-', 'удовлетворены частично')], default='+', max_length=2, verbose_name='Удовлетворение требований')),
                ('story', models.TextField(default='', help_text='Параллельно указывайте, чем подтверждаются эти факты (если есть приложения, укажите сразу номера и названия соответствующих приложений)', verbose_name='Укажите ПОСЛЕДОВАТЕЛЬНО, что произошло')),
                ('reasons_for_strike', models.TextField(default='', help_text='Опишите причины начала забастовки (например: условия труда на предприятии, продолжительность рабочего времени, безопасность ит.д. время, связанное с работой)', verbose_name='Причины начала забастовки')),
                ('change_number_participants', models.TextField(default='', help_text='Опишите как менялось количество участников забастовки во время проведения и что на это влияло?', verbose_name='Как менялось количество участников забастовки')),
                ('initiators_and_participants', models.TextField(default='', help_text='Ситуация с инициаторами и участниками забастовки/акции (продолжают ли они работать, применялись ли к ним административные меры со стороны предприятия)', verbose_name='Что с инициаторами и участниками')),
                ('state_position', models.TextField(default='', verbose_name='Позиция государства (Опишите реакцию государственных органов)')),
                ('results_so_far', models.TextField(default='', verbose_name='C какими итогами закончилась забастовка, если еще не закончилась, то какие итоги на данный момент.')),
                ('additional_information', models.TextField(blank=True, null=True, verbose_name='Любая дополнительная информация')),
            ],
            options={
                'verbose_name': 'Карточка',
                'verbose_name_plural': 'Карточки',
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
            },
        ),
        migrations.CreateModel(
            name='DemandTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demand', models.CharField(max_length=255, verbose_name='Требование')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Тип требования',
                'verbose_name_plural': 'Типы требований',
            },
        ),
        migrations.CreateModel(
            name='NumberChoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.CharField(max_length=255, verbose_name='Выбор')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Выбор числа',
                'verbose_name_plural': 'Выбор чисел',
            },
        ),
        migrations.CreateModel(
            name='OwnerShipTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Форма собственности',
                'verbose_name_plural': 'Формы собственности',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название источника', max_length=100, verbose_name='Название')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Источник',
                'verbose_name_plural': 'Источники',
            },
        ),
        migrations.CreateModel(
            name='Regions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('countries', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='strikeApp.countries')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
            },
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='', verbose_name='Файл')),
                ('description', models.TextField()),
                ('start_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата начала')),
                ('end_date', models.DateTimeField(default=datetime.datetime(2999, 1, 1, 0, 0, tzinfo=utc), verbose_name='Дата завершения')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='strikeApp.card')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
            },
        ),
        migrations.CreateModel(
            name='DemandCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('demand_categories', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='strikeApp.demandtypes', verbose_name='Тип требования')),
            ],
            options={
                'verbose_name': 'Характер требования',
                'verbose_name_plural': 'Характеры требований',
            },
        ),
        migrations.AddField(
            model_name='card',
            name='card_demand_category',
            field=models.ManyToManyField(to='strikeApp.DemandCategories', verbose_name='Характер требования'),
        ),
        migrations.AddField(
            model_name='card',
            name='card_sources',
            field=models.ManyToManyField(to='strikeApp.Source', verbose_name='Источник'),
        ),
        migrations.AddField(
            model_name='card',
            name='company_country',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='strikeApp.countries', verbose_name='Страна компании'),
        ),
        migrations.AddField(
            model_name='card',
            name='company_ownership_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='strikeApp.ownershiptypes', verbose_name='Форма собственности компании'),
        ),
        migrations.AddField(
            model_name='card',
            name='count_strike_participants',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='count_strike_participants', to='strikeApp.numberchoices', verbose_name='Количество участников забастовки/акции'),
        ),
        migrations.AddField(
            model_name='card',
            name='count_workers',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='count_workers', to='strikeApp.numberchoices', verbose_name='Общая численность работников на предприятии'),
        ),
        migrations.AddField(
            model_name='card',
            name='regions',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='strikeApp.regions', verbose_name='Регион'),
        ),
    ]
